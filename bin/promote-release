#!/bin/bash

function usage {
	echo "
usage: `basename $0` -f <release> | -D <release>

   <release>:  pre-release || beta

   eg.
      `basename $0` -f pre-release     : promotes pre-release to GA
      `basename $0` -D pre-release     : diffs pre-release and GA
"
	exit 1
}

fromRel=""
cmd=""
while getopts "f:D:" arg
do
	case $arg in
		f) cmd=cp; fromRel=$OPTARG;;
		D) cmd=diff; fromRel=$OPTARG;;
		*) usage;;
	esac
done
[ -z "$fromRel" ] && usage

case $fromRel in
	beta) toRel="pre-release";;
	pre-release) toRel="";;
	*) echo "release $fromRel not supported"; exit 1;;
esac
[ -n "$toRel" ] && toRelSuffix=".${toRel}" || toRelSuffix=""
[ -n "$toRel" ] && toRelDir="${toRel}/" || toRelDir=""

binDir=`dirname $0`
repoRoot=`cd $binDir/.. && pwd`
branch=`cd $repoRoot && git status -sb | head -1 | awk '{print $2}' | cut -f1 -d.`
statusCount=`cd $repoRoot && git status -sb | wc -l`
[ $statusCount -ne 1 ] && echo "repo needs to be clean for this script to run" && exit 1
(cd $repoRoot && git pull origin --rebase) || { echo "pull --rebase failed"; exit 1; }

# beta -> pre-release does not affect container versions
if [ $fromRel != beta ]; then
	echo $cmd $repoRoot/versions/preview-single-host.ver.$fromRel $repoRoot/versions/preview-single-host.ver${toRelSuffix}
	$cmd $repoRoot/versions/preview-single-host.ver.$fromRel $repoRoot/versions/preview-single-host.ver${toRelSuffix}
fi

for file in `cd config-templates/$fromRel && /bin/ls`
do
	echo $cmd $repoRoot/config-templates/$fromRel/$file $repoRoot/config-templates/${toRelDir}$file
	$cmd $repoRoot/config-templates/$fromRel/$file $repoRoot/config-templates/${toRelDir}$file
done
